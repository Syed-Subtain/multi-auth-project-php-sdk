<?php

declare(strict_types=1);

/*
 * MultiAuthSampleLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace MultiAuthSampleLib\Authentication;

use Core\Authentication\CoreAuth;
use Core\Request\Parameters\QueryParam;

/**
 * Utility class for authorization and token management.
 */
class ApiKeyManager extends CoreAuth implements ApiKeyCredentials
{
    private $token;

    private $apiKey;

    /**
     * Returns an instance of this class.
     *
     * @param string $token
     * @param string $apiKey
     */
    public function __construct(string $token, string $apiKey)
    {
        parent::__construct(
            QueryParam::init('token', $token)->required(),
            QueryParam::init('api-key', $apiKey)->required()
        );
        $this->token = $token;
        $this->apiKey = $apiKey;
    }

    /**
     * String value for token.
     */
    public function getToken(): string
    {
        return $this->token;
    }

    /**
     * String value for apiKey.
     */
    public function getApiKey(): string
    {
        return $this->apiKey;
    }

    /**
     * Checks if provided credentials match with existing ones.
     *
     * @param string $token
     * @param string $apiKey
     */
    public function equals(string $token, string $apiKey): bool
    {
        return $token == $this->token &&
            $apiKey == $this->apiKey;
    }
}
